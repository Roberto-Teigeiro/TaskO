-- Connect as ADMIN user
CONNECT ADMIN/Taskopassword123@localhost:1521/MTDRDB

-- Create tables without ADMIN prefix since we're already connected as ADMIN
-- Create USERS table first as it is referenced by other tables
CREATE TABLE USERS (
    USERID VARCHAR2(50) DEFAULT SYS_GUID() PRIMARY KEY,
    NAME VARCHAR2(255),
    EMAIL VARCHAR2(255),
    TELEGRAMUSERNAME VARCHAR2(255)
);

-- Create TEAM table as it is referenced by PROJECT_MEMBERS
CREATE TABLE TEAM (
    TEAMID VARCHAR2(50) DEFAULT SYS_GUID() PRIMARY KEY,
    PROJECTID VARCHAR2(50),  -- Added missing PROJECTID column from TeamItem model
    TEAMNAME VARCHAR2(255),  -- Changed NAME to TEAMNAME to match TeamItem model
    DESCRIPTION VARCHAR2(2000)
);

-- Create PROJECTS table as it is referenced by multiple tables
CREATE TABLE PROJECTS (
    PROJECTID VARCHAR2(50) DEFAULT SYS_GUID() PRIMARY KEY,
    PROJECTNAME VARCHAR2(255),  -- Changed NAME to PROJECTNAME to match ProjectItem model
    DESCRIPTION VARCHAR2(2000),
    STARTDATE DATE,
    ENDDATE DATE,
    STATUS VARCHAR2(50)
);

-- Create PROJECT_MEMBERS table with foreign keys to USERS, TEAM, and PROJECTS
CREATE TABLE PROJECT_MEMBERS (
    USERID VARCHAR2(50),
    TEAMID VARCHAR2(50),
    PROJECTID VARCHAR2(50),
    ROLE VARCHAR2(50),
    PRIMARY KEY (USERID, PROJECTID),
    FOREIGN KEY (USERID) REFERENCES USERS(USERID),
    FOREIGN KEY (TEAMID) REFERENCES TEAM(TEAMID),
    FOREIGN KEY (PROJECTID) REFERENCES PROJECTS(PROJECTID)
);

-- Create SPRINTS table with foreign key to PROJECTS
CREATE TABLE SPRINTS (
    SPRINTID VARCHAR2(50) DEFAULT SYS_GUID() PRIMARY KEY,
    PROJECTID VARCHAR2(50),
    NAME VARCHAR2(255),
    DESCRIPTION VARCHAR2(2000),  -- Added missing DESCRIPTION from SprintItem model
    STARTDATE DATE,
    ENDDATE DATE,
    STATUS VARCHAR2(50),
    ACTIVE NUMBER(1) DEFAULT 0,  -- Added missing ACTIVE boolean field from SprintItem model
    FOREIGN KEY (PROJECTID) REFERENCES PROJECTS(PROJECTID)
);

-- Create TASKS table with foreign keys to PROJECTS, SPRINTS, and USERS
CREATE TABLE TASKS (
    TASKID VARCHAR2(50) DEFAULT SYS_GUID() PRIMARY KEY,
    PROJECTID VARCHAR2(50),
    SPRINTID VARCHAR2(50),
    ASSIGNEE VARCHAR2(50),  -- Kept as ASSIGNEE to match TaskItem model
    TITLE VARCHAR2(255),    -- Kept as TITLE to match TaskItem model
    DESCRIPTION VARCHAR2(2000),
    STATUS VARCHAR2(50),
    PRIORITY VARCHAR2(50),
    STARTDATE DATE,         -- Added missing STARTDATE from TaskItem model
    ENDDATE DATE,           -- Changed DUEDATE to ENDDATE to match TaskItem model
    COMMENTS VARCHAR2(2000), -- Added missing COMMENTS from TaskItem model
    STORYPOINTS NUMBER,
    ESTIMATEDHOURS NUMBER,
    REALHOURS NUMBER,
    FOREIGN KEY (PROJECTID) REFERENCES PROJECTS(PROJECTID),
    FOREIGN KEY (SPRINTID) REFERENCES SPRINTS(SPRINTID),
    FOREIGN KEY (ASSIGNEE) REFERENCES USERS(USERID)
);

-- Create sample data
INSERT INTO USERS (NAME, EMAIL, TELEGRAMUSERNAME) 
VALUES ('Test User', 'test@example.com', 'test_user');

-- Create a sample project
INSERT INTO PROJECTS (PROJECTNAME, DESCRIPTION, STATUS)
VALUES ('Sample Project', 'This is a test project', 'ACTIVE');

-- Create a sample sprint
INSERT INTO SPRINTS (PROJECTID, NAME, STATUS, ACTIVE)
VALUES ((SELECT PROJECTID FROM PROJECTS WHERE PROJECTNAME = 'Sample Project'), 'Sprint 1', 'ACTIVE', 1);

-- Create a sample task
INSERT INTO TASKS (PROJECTID, SPRINTID, TITLE, STATUS, PRIORITY)
VALUES (
    (SELECT PROJECTID FROM PROJECTS WHERE PROJECTNAME = 'Sample Project'),
    (SELECT SPRINTID FROM SPRINTS WHERE NAME = 'Sprint 1'),
    'Sample Task',
    'TODO',
    'MEDIUM'
);

COMMIT;

EXIT;